import Head from 'next/head';
import { useEffect, useCallback, useContext } from 'react';
import Image from 'next/image';

import Banner from '../components/Banner';
import Card from '../components/Card';
import useLocation from '../hooks/useLocation';

import { fetchCoffeeStores, defaultImage } from '../lib/coffee-stores';
import styles from '../styles/Home.module.css';
import { ACTION_TYPES, StoreContext } from '../store/store-context';

export default function Home({ coffeeStores, data }) {
  const { loading, handleTrackLocation, locationErrorMsg } = useLocation();

  const {
    dispatch,
    state: { coffeeStore, latLong },
  } = useContext(StoreContext);

  const displayCoffeeStore =
    (coffeeStore.length ? coffeeStore : coffeeStores) || [];

  const getCoffeeStores = useCallback(async () => {
    try {
      if (!latLong) return;
      const fetchedCoffeeStore = await fetchCoffeeStores(latLong);
      dispatch({
        type: ACTION_TYPES.SET_COFFEE_STORES,
        payload: {
          coffeeStore: fetchedCoffeeStore,
        },
      });
      return fetchedCoffeeStore;
    } catch (error) {
      return [];
    }
  }, [latLong, dispatch]);

  useEffect(() => {
    getCoffeeStores();
  }, [getCoffeeStores]);

  const handleOnBannerClick = () => {
    handleTrackLocation();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={loading ? 'Locating' : 'View stores nearby'}
          handleOnClick={handleOnBannerClick}
        />
        {locationErrorMsg ? <p>{locationErrorMsg}</p> : ''}
        <div className={styles.heroImage}>
          <Image
            src='/static/hero-image.png'
            alt='hero-image'
            width={700}
            height={400}
          />
        </div>
        {displayCoffeeStore.length && (
          <>
            <h2 className={styles.heading2}>
              {coffeeStore.length ? 'Stores Near Me' : 'Toronto Store'}
            </h2>
            <div className={styles.cardLayout}>
              {displayCoffeeStore.map((coffeeStore) => (
                <Card
                  key={coffeeStore.fsq_id}
                  name={coffeeStore.name}
                  imgUrl={coffeeStore.imgUrl || defaultImage}
                  href={`/coffee-store/${coffeeStore.fsq_id}`}
                  className={styles.card}
                />
              ))}
            </div>
          </>
        )}
      </main>
    </div>
  );
}

export const getStaticProps = async () => {
  const coffeeStores = await fetchCoffeeStores();

  return {
    props: {
      coffeeStores,
    },
  };
};
